name: CI/CD Deployemnt

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'kubernetes/deployment.yaml'
  pull_request: 
    branches: [ main ]

jobs:
  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run : npn test || echo "No tests found, would add tests in a real project"

  lint: 
    name: Static Code Analysis 
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install
      
      - name: Lint job
        run: npm run lint

  build:
    name: Build job 
    runs-on: ubuntu-latest
    needs: [lint,test]
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install

      - name: Build 
        run: npm run build 

      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
  
  docker:
    name: Docker build and push
    runs-on: ubuntu-latest
    needs: [build]
    env:
      REGISTRY: ghrc.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ env.TOKEN }}
